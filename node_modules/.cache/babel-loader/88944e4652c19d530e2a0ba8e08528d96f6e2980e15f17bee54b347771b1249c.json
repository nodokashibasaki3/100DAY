{"ast":null,"code":"var _jsxFileName = \"/Users/nodokashibasaki/100DAY_DAY1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { TaskProvider } from './context/TaskContext';\nimport ApiKeySection from './components/ApiKeySection';\nimport VoiceInput from './components/VoiceInput';\nimport TimelineSection from './components/TimelineSection';\nimport FeasibilityAnalysis from './components/FeasibilityAnalysis';\nimport TaskList from './components/TaskList';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apiKey, setApiKey] = useLocalStorage('openai_api_key', '');\n  const [apiKeySet, setApiKeySet] = useState(!!apiKey);\n  const [error, setError] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const handleSaveApiKey = key => {\n    setApiKey(key);\n    setApiKeySet(true);\n  };\n  return /*#__PURE__*/_jsxDEV(TaskProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Student Task Advisor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tagline\",\n          children: \"Tell me what you need to do. I'll tell you if it's actually possible.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), !apiKeySet ? /*#__PURE__*/_jsxDEV(ApiKeySection, {\n        apiKey: apiKey,\n        onSaveApiKey: handleSaveApiKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(VoiceInput, {\n          apiKey: apiKey,\n          isProcessing: isProcessing,\n          setIsProcessing: setIsProcessing,\n          error: error,\n          setError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimelineSection, {\n          apiKey: apiKey,\n          isProcessing: isProcessing,\n          setIsProcessing: setIsProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FeasibilityAnalysis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H3n1XFdgAQwmXsDhYb9WoZgYVmc=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskProvider","ApiKeySection","VoiceInput","TimelineSection","FeasibilityAnalysis","TaskList","useLocalStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","apiKey","setApiKey","apiKeySet","setApiKeySet","error","setError","isProcessing","setIsProcessing","handleSaveApiKey","key","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSaveApiKey","_c","$RefreshReg$"],"sources":["/Users/nodokashibasaki/100DAY_DAY1/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { TaskProvider } from './context/TaskContext';\nimport ApiKeySection from './components/ApiKeySection';\nimport VoiceInput from './components/VoiceInput';\nimport TimelineSection from './components/TimelineSection';\nimport FeasibilityAnalysis from './components/FeasibilityAnalysis';\nimport TaskList from './components/TaskList';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nfunction App() {\n  const [apiKey, setApiKey] = useLocalStorage('openai_api_key', '');\n  const [apiKeySet, setApiKeySet] = useState(!!apiKey);\n  const [error, setError] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  \n  const handleSaveApiKey = (key) => {\n    setApiKey(key);\n    setApiKeySet(true);\n  };\n\n  return (\n    <TaskProvider>\n      <div className=\"app\">\n        <header>\n          <h1>Student Task Advisor</h1>\n          <p className=\"tagline\">Tell me what you need to do. I'll tell you if it's actually possible.</p>\n        </header>\n        \n        {!apiKeySet ? (\n          <ApiKeySection \n            apiKey={apiKey} \n            onSaveApiKey={handleSaveApiKey} \n          />\n        ) : (\n          <>\n            <VoiceInput \n              apiKey={apiKey}\n              isProcessing={isProcessing} \n              setIsProcessing={setIsProcessing}\n              error={error}\n              setError={setError}\n            />\n            \n            <TimelineSection \n              apiKey={apiKey}\n              isProcessing={isProcessing} \n              setIsProcessing={setIsProcessing}\n            />\n            \n            <FeasibilityAnalysis />\n            \n            <TaskList />\n          </>\n        )}\n      </div>\n    </TaskProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,eAAe,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,eAAe,CAAC,gBAAgB,EAAE,EAAE,CAAC;EACjE,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAACc,MAAM,CAAC;EACpD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMsB,gBAAgB,GAAIC,GAAG,IAAK;IAChCR,SAAS,CAACQ,GAAG,CAAC;IACdN,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACER,OAAA,CAACR,YAAY;IAAAuB,QAAA,eACXf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBf,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAI;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BpB,OAAA;UAAGgB,SAAS,EAAC,SAAS;UAAAD,QAAA,EAAC;QAAqE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1F,CAAC,EAER,CAACb,SAAS,gBACTP,OAAA,CAACP,aAAa;QACZY,MAAM,EAAEA,MAAO;QACfgB,YAAY,EAAER;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,gBAEFpB,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACEf,OAAA,CAACN,UAAU;UACTW,MAAM,EAAEA,MAAO;UACfM,YAAY,EAAEA,YAAa;UAC3BC,eAAe,EAAEA,eAAgB;UACjCH,KAAK,EAAEA,KAAM;UACbC,QAAQ,EAAEA;QAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eAEFpB,OAAA,CAACL,eAAe;UACdU,MAAM,EAAEA,MAAO;UACfM,YAAY,EAAEA,YAAa;UAC3BC,eAAe,EAAEA;QAAgB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eAEFpB,OAAA,CAACJ,mBAAmB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEvBpB,OAAA,CAACH,QAAQ;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACZ,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB;AAAChB,EAAA,CAhDQD,GAAG;EAAA,QACkBL,eAAe;AAAA;AAAAwB,EAAA,GADpCnB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}