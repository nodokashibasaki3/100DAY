{"ast":null,"code":"var _jsxFileName = \"/Users/nodokashibasaki/100DAY_DAY1/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTaskContext } from '../context/TaskContext';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const {\n    tasks,\n    getTasksByCategory,\n    getCategoryColor\n  } = useTaskContext();\n  const tasksByCategory = getTasksByCategory();\n  if (tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start talking about your tasks and deadlines. I'll help you figure out what's possible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"example\",\n        children: \"Try saying: \\\"I have a 10-page research paper due Friday that I haven't started, a math test tomorrow I need to study for, and I promised to help my friend move on Thursday.\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: Object.keys(tasksByCategory).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"category-title\",\n        style: {\n          borderColor: getCategoryColor(category)\n        },\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"task-list\",\n        children: tasksByCategory[category].map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"MAtIn8PnY31cOe0Zteqj21BjKvI=\", false, function () {\n  return [useTaskContext];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useTaskContext","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","tasks","getTasksByCategory","getCategoryColor","tasksByCategory","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","category","style","borderColor","task","id","_c","$RefreshReg$"],"sources":["/Users/nodokashibasaki/100DAY_DAY1/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\nimport { useTaskContext } from '../context/TaskContext';\nimport TaskItem from './TaskItem';\n\nconst TaskList = () => {\n  const { tasks, getTasksByCategory, getCategoryColor } = useTaskContext();\n  \n  const tasksByCategory = getTasksByCategory();\n  \n  if (tasks.length === 0) {\n    return (\n      <div className=\"empty-state\">\n        <p>Start talking about your tasks and deadlines. I'll help you figure out what's possible.</p>\n        <p className=\"example\">Try saying: \"I have a 10-page research paper due Friday that I haven't started, a math test tomorrow I need to study for, and I promised to help my friend move on Thursday.\"</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"tasks-container\">\n      {Object.keys(tasksByCategory).map(category => (\n        <div className=\"category-section\" key={category}>\n          <h2 \n            className=\"category-title\"\n            style={{ borderColor: getCategoryColor(category) }}\n          >\n            {category}\n          </h2>\n          <ul className=\"task-list\">\n            {tasksByCategory[category].map(task => (\n              <TaskItem key={task.id} task={task} />\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,KAAK;IAAEC,kBAAkB;IAAEC;EAAiB,CAAC,GAAGR,cAAc,CAAC,CAAC;EAExE,MAAMS,eAAe,GAAGF,kBAAkB,CAAC,CAAC;EAE5C,IAAID,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;IACtB,oBACEP,OAAA;MAAKQ,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BT,OAAA;QAAAS,QAAA,EAAG;MAAuF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9Fb,OAAA;QAAGQ,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAA6K;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrM,CAAC;EAEV;EAEA,oBACEb,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BK,MAAM,CAACC,IAAI,CAACT,eAAe,CAAC,CAACU,GAAG,CAACC,QAAQ,iBACxCjB,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BT,OAAA;QACEQ,SAAS,EAAC,gBAAgB;QAC1BU,KAAK,EAAE;UAAEC,WAAW,EAAEd,gBAAgB,CAACY,QAAQ;QAAE,CAAE;QAAAR,QAAA,EAElDQ;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACLb,OAAA;QAAIQ,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtBH,eAAe,CAACW,QAAQ,CAAC,CAACD,GAAG,CAACI,IAAI,iBACjCpB,OAAA,CAACF,QAAQ;UAAesB,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACC,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GAXgCI,QAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAY1C,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CAjCID,QAAQ;EAAA,QAC4CJ,cAAc;AAAA;AAAAyB,EAAA,GADlErB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}