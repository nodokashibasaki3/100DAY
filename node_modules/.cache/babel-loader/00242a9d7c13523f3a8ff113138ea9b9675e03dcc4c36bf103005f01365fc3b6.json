{"ast":null,"code":"var _jsxFileName = \"/Users/nodokashibasaki/100DAY_DAY1/src/components/VoiceInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTaskContext } from '../context/TaskContext';\nimport useSpeechRecognition from '../hooks/useSpeechRecognition';\nimport { processTranscriptWithAI } from '../services/openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  apiKey,\n  isProcessing,\n  setIsProcessing,\n  error,\n  setError\n}) => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const {\n    addTasks\n  } = useTaskContext();\n  const {\n    isListening,\n    toggleListening,\n    recognition\n  } = useSpeechRecognition({\n    onResult: transcript => setTranscript(transcript),\n    onError: error => setError(`Speech recognition error: ${error}`)\n  });\n  const handleProcessTranscript = async () => {\n    if (!transcript.trim() || !apiKey) return;\n    setIsProcessing(true);\n    try {\n      const newTasks = await processTranscriptWithAI(transcript, apiKey);\n      addTasks(newTasks);\n      setTranscript('');\n    } catch (error) {\n      console.error('Error processing transcript:', error);\n      setError('Failed to process your tasks. Please check your API key and try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `record-button ${isListening ? 'active' : ''}`,\n      onClick: toggleListening,\n      disabled: isProcessing,\n      children: isListening ? 'Stop Listening' : 'Start Talking'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listening-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pulse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Listening...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"transcript\",\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: handleProcessTranscript,\n        disabled: isProcessing,\n        children: isProcessing ? 'Processing...' : 'Process Tasks'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"RMPSsSKzhDKNxOR2FYSbCGFySKY=\", false, function () {\n  return [useTaskContext, useSpeechRecognition];\n});\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useState","useTaskContext","useSpeechRecognition","processTranscriptWithAI","jsxDEV","_jsxDEV","VoiceInput","apiKey","isProcessing","setIsProcessing","error","setError","_s","transcript","setTranscript","addTasks","isListening","toggleListening","recognition","onResult","onError","handleProcessTranscript","trim","newTasks","console","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nodokashibasaki/100DAY_DAY1/src/components/VoiceInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTaskContext } from '../context/TaskContext';\nimport useSpeechRecognition from '../hooks/useSpeechRecognition';\nimport { processTranscriptWithAI } from '../services/openai';\n\nconst VoiceInput = ({ apiKey, isProcessing, setIsProcessing, error, setError }) => {\n  const [transcript, setTranscript] = useState('');\n  const { addTasks } = useTaskContext();\n  \n  const { isListening, toggleListening, recognition } = useSpeechRecognition({\n    onResult: (transcript) => setTranscript(transcript),\n    onError: (error) => setError(`Speech recognition error: ${error}`)\n  });\n  \n  const handleProcessTranscript = async () => {\n    if (!transcript.trim() || !apiKey) return;\n    \n    setIsProcessing(true);\n    \n    try {\n      const newTasks = await processTranscriptWithAI(transcript, apiKey);\n      addTasks(newTasks);\n      setTranscript('');\n    } catch (error) {\n      console.error('Error processing transcript:', error);\n      setError('Failed to process your tasks. Please check your API key and try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  return (\n    <div className=\"voice-section\">\n      <button \n        className={`record-button ${isListening ? 'active' : ''}`}\n        onClick={toggleListening}\n        disabled={isProcessing}\n      >\n        {isListening ? 'Stop Listening' : 'Start Talking'}\n      </button>\n      \n      {isListening && (\n        <div className=\"listening-indicator\">\n          <div className=\"pulse\"></div>\n          <p>Listening...</p>\n        </div>\n      )}\n      \n      {transcript && (\n        <div className=\"transcript-section\">\n          <p className=\"transcript\">{transcript}</p>\n          <button \n            className=\"process-button\"\n            onClick={handleProcessTranscript}\n            disabled={isProcessing}\n          >\n            {isProcessing ? 'Processing...' : 'Process Tasks'}\n          </button>\n        </div>\n      )}\n      \n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default VoiceInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}